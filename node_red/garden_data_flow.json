[
    {
        "id": "10d1c30d.fb5bbd",
        "type": "tab",
        "label": "Garden Data",
        "disabled": false,
        "info": ""
    },
    {
        "id": "bb81b54c.21172",
        "type": "mqtt out",
        "z": "10d1c30d.fb5bbd",
        "name": "garden publisher",
        "topic": "garden/data",
        "qos": "",
        "retain": "",
        "broker": "5d3380ce.66ad6",
        "x": 350,
        "y": 100,
        "wires": []
    },
    {
        "id": "a4ea5508.7c627",
        "type": "inject",
        "z": "10d1c30d.fb5bbd",
        "name": "test data",
        "topic": "",
        "payload": "{\"board_id\":\"9cf0bab7-d3e6-4a3e-a5fe-9dfde5edc842\",\"timestamp\":\"2018-06-12T01:45:30.250Z\",\"sensors\":[{\"sensor_id\":\"658ad87f-79f2-4c8c-9ae4-43a4a72f6253\",\"value\":\".85\",\"type\":\"percent_dry\"},{\"sensor_id\":\"98258788-9fbb-44e5-85cd-f8d5723f379f\",\"value\":\"79.5\",\"type\":\"temperature\"},{\"sensor_id\":\"086975c5-623f-42ef-8620-7ff90d9bafd8\",\"value\":\"32\",\"type\":\"humidity\"}]}",
        "payloadType": "json",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 140,
        "y": 100,
        "wires": [
            [
                "bb81b54c.21172"
            ]
        ]
    },
    {
        "id": "82d05b62.1fed98",
        "type": "comment",
        "z": "10d1c30d.fb5bbd",
        "name": "Test: Publish Garden Data",
        "info": "",
        "x": 170,
        "y": 40,
        "wires": []
    },
    {
        "id": "588033bb.784e2c",
        "type": "comment",
        "z": "10d1c30d.fb5bbd",
        "name": "Garden Data Pipeline",
        "info": "",
        "x": 160,
        "y": 220,
        "wires": []
    },
    {
        "id": "a4de7a21.227008",
        "type": "function",
        "z": "10d1c30d.fb5bbd",
        "name": "create collector select",
        "func": "let payload = JSON.parse(msg.payload);\nnode.log(\"New mqtt msg: \" + JSON.stringify(payload));\n\nboard_id = payload.board_id\nnode.log(\"Found board id: \" + board_id);\n\nlet collector_ids = [];\nfor(var i = 0; i < payload.sensors.length; i++) {\n    collector_ids.push(payload.sensors[i].sensor_id);\n}\nnode.log(\"Found collector ids: \" + collector_ids);\n\n// select * from collector where uuid in ( '560bea59-b6bf-4120-b3b1-3452af30ab04', '7764b69c-3636-4be2-9659-87ba506d8ae5');\n\nmsg.data = payload;\nlet uuids_str = '';\nfor(var i = 0; i < collector_ids.length; i++) {\n    uuids_str += `'${collector_ids[i]}'`;\n\n    if(i < collector_ids.length - 1) {\n        uuids_str += \", \";\n    }\n}\n\nlet select = `select id from collector where uuid in (${uuids_str});`\nmsg.payload = select;\nnode.log('Query: ' + select);\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 360,
        "y": 280,
        "wires": [
            [
                "d6e3943c.36965",
                "a1739640.5bb7c8"
            ]
        ]
    },
    {
        "id": "a1739640.5bb7c8",
        "type": "postgres",
        "z": "10d1c30d.fb5bbd",
        "postgresdb": "81a5fd56.d162c8",
        "name": "get collector id",
        "output": true,
        "outputs": 1,
        "x": 600,
        "y": 280,
        "wires": [
            [
                "ea5aad91.8be48",
                "b91b053.5fe28f8"
            ]
        ]
    },
    {
        "id": "b91b053.5fe28f8",
        "type": "function",
        "z": "10d1c30d.fb5bbd",
        "name": "create sample insert",
        "func": "let data = msg.data;\nlet payload = msg.payload;\nlet valueStr = '';\nlet timestamp = JSON.stringify(data.timestamp).slice(1, -2);\nfor(var i = 0; i < data.sensors.length; i++) {\n    let value = {};\n    value.value = data.sensors[i].value;\n    let dataStr = JSON.stringify(value).replace(/\"\"/g,'\\\"');\n    valueStr += `(${payload[i].id}, to_timestamp('${timestamp}', 'yyyy-mm-ddThh24:mi:ss.ms'), '${dataStr}')`;\n\n    if(i < data.sensors.length - 1) {\n        valueStr += \", \";\n    }\n}\n\nlet insert = `insert into sample(collector_id, timestamp, data) values ${valueStr}`;\nmsg.payload = insert;\n\nnode.log(\"Query: \" + insert)\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 840,
        "y": 280,
        "wires": [
            [
                "f32e86d3.3cc44",
                "478792b7.000a0c"
            ]
        ],
        "inputLabels": [
            "data_input"
        ],
        "outputLabels": [
            "select_input"
        ]
    },
    {
        "id": "478792b7.000a0c",
        "type": "postgres",
        "z": "10d1c30d.fb5bbd",
        "postgresdb": "81a5fd56.d162c8",
        "name": "insert sample",
        "output": true,
        "outputs": 1,
        "x": 1080,
        "y": 280,
        "wires": [
            [
                "11b8bb73.8766e5"
            ]
        ]
    },
    {
        "id": "81b81f6b.1518b",
        "type": "debug",
        "z": "10d1c30d.fb5bbd",
        "name": "input debug",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 330,
        "y": 360,
        "wires": []
    },
    {
        "id": "d6e3943c.36965",
        "type": "debug",
        "z": "10d1c30d.fb5bbd",
        "name": "select debug",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 590,
        "y": 360,
        "wires": []
    },
    {
        "id": "ea5aad91.8be48",
        "type": "debug",
        "z": "10d1c30d.fb5bbd",
        "name": "db select debug",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 820,
        "y": 360,
        "wires": []
    },
    {
        "id": "f32e86d3.3cc44",
        "type": "debug",
        "z": "10d1c30d.fb5bbd",
        "name": "insert debug",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 1070,
        "y": 360,
        "wires": []
    },
    {
        "id": "11b8bb73.8766e5",
        "type": "debug",
        "z": "10d1c30d.fb5bbd",
        "name": "db insert debug",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 1320,
        "y": 360,
        "wires": []
    },
    {
        "id": "9364d0e6.e992f",
        "type": "mqtt in",
        "z": "10d1c30d.fb5bbd",
        "name": "",
        "topic": "garden/data",
        "qos": "2",
        "broker": "5d3380ce.66ad6",
        "x": 130,
        "y": 280,
        "wires": [
            [
                "a4de7a21.227008",
                "81b81f6b.1518b"
            ]
        ]
    },
    {
        "id": "5d3380ce.66ad6",
        "type": "mqtt-broker",
        "z": "",
        "name": "mosquitto",
        "broker": "broker",
        "port": "1883",
        "clientid": "",
        "usetls": false,
        "compatmode": true,
        "keepalive": "60",
        "cleansession": true,
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": ""
    },
    {
        "id": "81a5fd56.d162c8",
        "type": "postgresdb",
        "z": "",
        "hostname": "db",
        "port": "5432",
        "db": "iot_data",
        "ssl": false
    }
]